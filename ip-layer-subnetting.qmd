---
title: IP Layer & Subnetting
---

## Summary of VLN03 – Internet Protocol and Addressing (Slides 3–17)

### Overview

This lecture begins the deep dive into the **Network Layer** of the Internet stack — specifically the **Internet Protocol (IP)**. We analyze how data is transmitted between hosts across networks, how datagrams are structured, and how IP addresses define logical and physical boundaries within networks.

Several **side explorations** were included to clarify underlying technologies (e.g. ARP, DHCP, NAT) and real-world applications (e.g. dormitory network issues, personal Wi-Fi routing).

---

### 1. HTTP Traffic and Wireshark (Slides 3–7)

Wireshark is used to capture and inspect real HTTP traffic.

#### Key points:

* HTTP messages are captured and decoded by Wireshark.
* These are transported over **TCP**, which is encapsulated in **IP**, which is wrapped in **Ethernet frames**.

#### Reassembly in Wireshark:

Wireshark reconstructs **complete HTTP messages** from **multiple TCP segments** using internal state tracking.

---

#### Key term: PDU (Protocol Data Unit)

A PDU is the **unit of data** defined at a specific protocol layer.

| Layer             | PDU Name           | Example                       |
| ----------------- | ------------------ | ----------------------------- |
| Application Layer | Message            | HTTP request or response      |
| Transport Layer   | Segment / Datagram | TCP segment, UDP datagram     |
| Network Layer     | Datagram           | IP packet                     |
| Link Layer        | Frame              | Ethernet frame                |
| Physical Layer    | Bits               | Electrical or optical signals |

---

### 2. Introduction to the IP Layer (Slides 8–10)

We zoom into the **Network Layer** of the Internet stack.

#### Main components of the network layer:

1. **IP protocol**:

   * Packet format, addressing, and forwarding
   * Stateless, best-effort delivery

2. **Routing protocols**:

   * Determine forwarding tables (e.g. RIP, OSPF, BGP)

3. **ICMP**:

   * Used for diagnostics (e.g. `ping`, `traceroute`)

---

#### Key term: Datagram

A **datagram** is a self-contained, independently routed network-layer packet. In IP networks, it refers to an **IP packet** that includes both header and payload.

* Connectionless
* May be fragmented
* Carries no session state

> IP packets = IP datagrams (used interchangeably)

---

### 3. Structure of an IP Datagram (Slide 11)

We study the fields of the IPv4 header.

#### IP Header Fields (simplified):

| Field              | Size (bits) | Purpose                              |
| ------------------ | ----------- | ------------------------------------ |
| Version            | 4           | IP version (usually 4)               |
| Header Length      | 4           | In 32-bit words                      |
| DS/ECN             | 8           | Differentiated Services / Congestion |
| Total Length       | 16          | Header + payload length              |
| Identification     | 16          | Fragmentation ID                     |
| Flags              | 3           | Fragment control                     |
| Fragment Offset    | 13          | Position of fragment                 |
| TTL                | 8           | Time to live                         |
| Protocol           | 8           | Higher-layer protocol (e.g. TCP = 6) |
| Header Checksum    | 16          | Detects corruption in header         |
| Source IP          | 32          | IP of sender                         |
| Destination IP     | 32          | IP of receiver                       |
| Options (optional) | variable    | Rarely used                          |

---

### 4. IP Fragmentation (Slides 12–13)

#### Why fragmentation exists:

* Ethernet and other link-layer technologies impose an **MTU (Maximum Transmission Unit)**.
* IP allows a large datagram to be split into smaller **fragments** if the MTU is too small.

#### Fragmentation fields:

* **Identification**: Shared across all fragments of a datagram
* **Fragment Offset**: Position (in 8-byte units)
* **MF (More Fragments)**: Flag set to 1 for all fragments except the last

> Only the **destination host** reassembles fragments. Routers never do.

#### Example (simplified):

A 3072-byte datagram sent over a 1200-byte MTU link:

| Fragment | Offset | MF | Data bytes |
| -------- | ------ | -- | ---------- |
| 1        | 0      | 1  | 960        |
| 2        | 120    | 1  | 960        |
| 3        | 240    | 0  | 1020       |

---

### 5. Interfaces and Addressing (Slides 14–15)

#### Key concepts:

* **An IP address is assigned to a network interface**, not the host as a whole.
* A **router has multiple interfaces**, each on a different subnet.
* A **host usually has one IP**.
* Devices in the same subnet share the same **address prefix**.

#### Reference network diagram from slide 15:

* **Router interfaces**:

  * `223.1.1.4` (Subnet A, left)
  * `223.1.2.9` (Subnet B, right)
  * `223.1.3.27` (Subnet C, bottom)

* **Subnets and hosts**:

| Subnet | Hosts           | Router IP  |
| ------ | --------------- | ---------- |
| A      | 223.1.1.1 – 1.3 | 223.1.1.4  |
| B      | 223.1.2.1 – 2.2 | 223.1.2.9  |
| C      | 223.1.3.1 – 3.2 | 223.1.3.27 |

All IPs within a subnet share the same `/24` prefix.

---

### 6. LANs, WLANs, and Subnets (Discussion and Detours)

**Triggered by slide 15** and related questions.

#### Clarifications:

* A **LAN** is a link-layer broadcast domain (Ethernet, WLAN).
* A **subnet** is a logical grouping of IPs — typically matches a LAN, but not always.
* A **WLAN** is a type of LAN using wireless physical media.

---

#### Key term: ARP (Address Resolution Protocol)

ARP resolves IP addresses to MAC addresses on a LAN.

* A device sends a broadcast:

  ```
  Who has 192.168.1.5?
  ```
* The target replies with its MAC address.
* The result is cached in the **ARP table**.

> Without ARP, IP-based communication over Ethernet is impossible.

---

#### ARP Spoofing

A malicious device sends fake ARP replies:

* “I am 192.168.1.1 — here’s my MAC”
* Can hijack traffic (man-in-the-middle)

This only works on **shared LANs** without port isolation.

---

### 7. Dorm Network Architecture (Applied Detour)

**Triggered by IP addressing and subnet questions**

* Dorm connections are likely per-port VLANs
* Ethernet switch: exposes multiple MACs/IPs to Nexabit
* Wi-Fi AP (with NAT): hides multiple devices behind one IP
* Nexabit bans switches/APs due to fragility, not inherent danger

> Your dorm disconnection incident may have occurred due to multiple devices behind a dumb switch overwhelming fragile infrastructure — not misuse on your part.

---

### 8. Subnet Hardware Definition (Slide 17)

A subnet consists of **all interfaces** connected to the **same physical link-layer medium**, excluding routers.

Visual trick: if you “cut away” each router’s interfaces, the **remaining connected islands** are subnetworks.

In the slide:

* Regions 1–3: LAN subnets (hosts + router)
* Regions 4–6: router-router links (point-to-point subnets)

---

